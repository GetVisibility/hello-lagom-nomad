#
#
play {
  application.loader = com.getvisibility.hellolagomnomad.impl.HellolagomnomadLoader
  akka.actor-system = hellolagomnomad
}

hello-lagom-nomad.cassandra.keyspace = hello_lagom_nomad

cassandra-journal.keyspace = ${hello-lagom-nomad.cassandra.keyspace}
cassandra-snapshot-store.keyspace = ${hello-lagom-nomad.cassandra.keyspace}
lagom.persistence.read-side.cassandra.keyspace = ${hello-lagom-nomad.cassandra.keyspace}


# The properties below override Lagom default configuration with the recommended values for new projects.
#
# Lagom has not yet made these settings the defaults for backward-compatibility reasons.

# Prefer 'ddata' over 'persistence' to share cluster sharding state for new projects.
# See https://doc.akka.io/docs/akka/current/cluster-sharding.html#distributed-data-vs-persistence-mode
akka.cluster.sharding.state-store-mode = ddata

# Enable the serializer provided in Akka 2.5.8+ for akka.Done and other internal
# messages to avoid the use of Java serialization.
akka.actor.serialization-bindings {
  "akka.Done"                 = akka-misc
  "akka.actor.Address"        = akka-misc
  "akka.remote.UniqueAddress" = akka-misc
}

lagom {
  discovery {
    consul {
      agent-hostname = "localhost"   # hostname or IP-address for the Consul agent
      agent-port = 8500          # port for the Consul agent
      uri-scheme = "http"        # for example: http or https
      routing-policy = "round-robin" # valid routing policies: first, random, round-robin
    }
  }
}

akka {
  actor {
    # Either one of "local", "remote" or "cluster" or the
    # FQCN of the ActorRefProvider to be used; the below is the built-in default,
    # note that "remote" and "cluster" requires the akka-remote and akka-cluster
    # artifacts to be on the classpath.
    provider = "cluster"
    debug {
      receive = off
      lifecycle = off
    }
  }

  discovery {
    method = akka-consul
    akka-consul {
      class = "akka.discovery.consul.ConsulSimpleServiceDiscovery"
      #How to connect to Consul to fetch services data
      consul-host = "localhost"
      consul-port = 8500

      # This uses akka bootstrap to find a cluster.
      # Specifically Consul to find the seed nodes, this will ask Consul for all services tagged with a `system:` prefix
      # and then for a specific akka cluster (actor system) which is named in the play.akka.actor-system configuration.
      # So in our case we're looking for a cluster in consul named `system:hellolagomnomad`
      application-name-tag-prefix = "system:"

      # Prefix for tag containing port number where akka management is set up so that
      # the seed nodes can be found, an example value for the tag would be `akka-management-port:19999`
      application-akka-management-port-tag-prefix = "akka-management-port:"
    }
  }

  remote {
    log-remote-lifecycle-events = on
  }

  http.routing.decode-max-size = "8M"
}
